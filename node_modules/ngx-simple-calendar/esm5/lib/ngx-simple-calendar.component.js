/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, ContentChild, ElementRef, Input, TemplateRef, ViewChild } from '@angular/core';
import { NgxSimpleCalendarService } from './ngx-simple-calendar.service';
import { months, days } from './data-models/data-calendar';
var NgxSimpleCalendarComponent = /** @class */ (function () {
    function NgxSimpleCalendarComponent(ngxCalendarSrv) {
        this.ngxCalendarSrv = ngxCalendarSrv;
        this.options = {};
        this.dayCorrectedHeight = '';
        this.months = months;
        this.days = days;
        this.settings = {
            outline: true,
            evenDayDimensions: false
        };
    }
    Object.defineProperty(NgxSimpleCalendarComponent.prototype, "events", {
        get: /**
         * @return {?}
         */
        function () {
            return this.eventsInternal;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.eventsInternal = value;
            this.initializeCalendar();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NgxSimpleCalendarComponent.prototype, "activeMonth", {
        get: /**
         * @return {?}
         */
        function () {
            var _this = this;
            /** @type {?} */
            var currentMonth = months.find((/**
             * @param {?} month
             * @return {?}
             */
            function (month) { return month.id === _this.currentMonth; }));
            return {
                year: this.currentYear,
                month: currentMonth,
                setNextMonth: this.setNextMonth,
                setPreviousMonth: this.setPreviousMonth
            };
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    NgxSimpleCalendarComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.settings = tslib_1.__assign({}, this.settings, this.options);
        this.initializeCalendar();
    };
    /**
     * @return {?}
     */
    NgxSimpleCalendarComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        setTimeout((/**
         * @return {?}
         */
        function () { return _this.dayCorrectedHeight = _this.dayHolder.nativeElement.clientWidth + "px"; }), 0);
    };
    /**
     * @private
     * @return {?}
     */
    NgxSimpleCalendarComponent.prototype.initializeCalendar = /**
     * @private
     * @return {?}
     */
    function () {
        this.setupActiveDate();
        this.setupCalendarData();
    };
    /**
     * @private
     * @return {?}
     */
    NgxSimpleCalendarComponent.prototype.setupActiveDate = /**
     * @private
     * @return {?}
     */
    function () {
        if (!this.currentMonth) {
            /** @type {?} */
            var now = new Date();
            this.currentMonth = now.getMonth();
            this.currentYear = now.getFullYear();
            this.currentMonthYearText = this.ngxCalendarSrv.getMonthYearText(this.currentMonth, this.currentYear);
        }
    };
    /**
     * @private
     * @return {?}
     */
    NgxSimpleCalendarComponent.prototype.setupCalendarData = /**
     * @private
     * @return {?}
     */
    function () {
        this.calendarData = this.ngxCalendarSrv.setupCalendar(this.currentMonth, this.currentYear, this.events);
    };
    /**
     * @return {?}
     */
    NgxSimpleCalendarComponent.prototype.setPreviousMonth = /**
     * @return {?}
     */
    function () {
        if ((this.currentMonth - 1) === -1) {
            this.currentMonth = 11;
            this.currentYear = this.currentYear - 1;
        }
        else {
            this.currentMonth = this.currentMonth - 1;
        }
        this.calendarData = this.ngxCalendarSrv.setupCalendar(this.currentMonth, this.currentYear, this.events);
        this.currentMonthYearText = this.ngxCalendarSrv.getMonthYearText(this.currentMonth, this.currentYear);
    };
    /**
     * @return {?}
     */
    NgxSimpleCalendarComponent.prototype.setNextMonth = /**
     * @return {?}
     */
    function () {
        if ((this.currentMonth + 1) === 12) {
            this.currentMonth = 0;
            this.currentYear = this.currentYear + 1;
        }
        else {
            this.currentMonth = this.currentMonth + 1;
        }
        this.calendarData = this.ngxCalendarSrv.setupCalendar(this.currentMonth, this.currentYear, this.events);
        this.currentMonthYearText = this.ngxCalendarSrv.getMonthYearText(this.currentMonth, this.currentYear);
    };
    NgxSimpleCalendarComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ngx-simple-calendar',
                    template: "<div class=\"ngx-calendar__top-bar\">\r\n  <ng-container *ngIf=\"topBarTemplate\">\r\n    <ng-container *ngTemplateOutlet=\"topBarTemplate; context: activeMonth\"></ng-container>\r\n  </ng-container>\r\n  <ng-container *ngIf=\"!topBarTemplate\">\r\n    <div class=\"ngx-calendar__top-bar-icon\" (click)=\"setPreviousMonth()\">\r\n      <\r\n    </div>\r\n    <span class=\"ngx-calendar__title\">{{currentMonthYearText }}</span>\r\n    <div class=\"ngx-calendar__top-bar-icon\" (click)=\"setNextMonth()\">\r\n      >\r\n    </div>\r\n  </ng-container>\r\n\r\n</div>\r\n<div class=\"ngx-calendar__wrapper\">\r\n  <div class=\"ngx-calendar__calendar\">\r\n    <div class=\"ngx-calendar__days-of-week\">\r\n\r\n      <div class=\"ngx-calendar__day-of-week\"\r\n           *ngFor=\"let day of days\">\r\n        <ng-container *ngIf=\"weekDaysTemplate\">\r\n          <ng-container *ngTemplateOutlet=\"weekDaysTemplate; context: day\"></ng-container>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!weekDaysTemplate\">\r\n          {{day.name }}\r\n        </ng-container>\r\n      </div>\r\n\r\n    </div>\r\n    <div class=\"ngx-calendar__days-holder\"\r\n         [style.align-content]=\"settings.evenDayDimensions ? 'baseline': 'initial' \"\r\n         [class.ngx-calendar__days-holder--outline]=\"settings.outline\">\r\n      <div class=\"ngx-calendar__day\"\r\n           #dayHolder\r\n           *ngFor=\"let day of calendarData\"\r\n           [style.height]=\"settings.evenDayDimensions ? dayCorrectedHeight : 'initial'\"\r\n           [class.ngx-calendar__day--outline]=\"settings.outline\"\r\n           [class.today]=\"day.today\"\r\n           [class.not-current]=\"!day.activeMonth\">\r\n        <div [style.display]=\"day.activeMonth ? 'none': 'block'\" class=\"ngx-calendar__day--overlay\"></div>\r\n        <div *ngIf=\"!dayTemplate\" class=\"ngx-calendar__default-day\">\r\n          <div class=\"ngx-calendar__day-number\">{{day.number}}</div>\r\n        </div>\r\n        <ng-container *ngIf=\"dayTemplate\">\r\n          <ng-container *ngTemplateOutlet=\"dayTemplate; context: day\"></ng-container>\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n",
                    styles: [":host{height:100%;width:100%;position:absolute;top:0;bottom:0;right:0;left:0;display:flex;flex-direction:column}.ngx-calendar__top-bar{display:flex;justify-content:center;align-items:center;margin-bottom:1.35rem}.ngx-calendar__top-bar-icon{background-color:#eceff1;font-size:1.1rem;height:1.5rem;width:1.5rem;display:flex;align-items:center;border-radius:50%;justify-content:center;margin:0 1.25rem;color:#6c6d6e;cursor:pointer;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.ngx-calendar__title{color:#455a64;font-size:1.25rem;letter-spacing:.25px;font-weight:500}.ngx-calendar__days-holder,.ngx-calendar__wrapper{flex:1;position:relative}.ngx-calendar__days-holder{display:flex;flex-wrap:wrap}.ngx-calendar__days-holder--outline{border-left:1px solid #cfd8dc;border-top:1px solid #cfd8dc}.ngx-calendar__calendar,.ngx-calendar__days{position:absolute;top:0;bottom:0;right:0;left:0;display:flex}.ngx-calendar__calendar{flex-direction:column}.ngx-calendar__days-of-week{display:flex}.ngx-calendar__day-of-week{flex:1;color:#64818f;font-size:.775rem;padding-top:.35rem;padding-bottom:.35rem}.ngx-calendar__days{background-color:#fff;border:1px solid #cfd8dc;display:flex;flex-wrap:wrap}.ngx-calendar__day{flex:0 1 calc(100%/7 - 1px);border-bottom:1px solid transparent;border-right:1px solid transparent;position:relative}.ngx-calendar__day--overlay{background-color:#f0f4f88a;position:absolute;top:0;bottom:0;right:0;left:0;z-index:2}.ngx-calendar__day--outline{border-bottom:1px solid #cfd8dc;border-right:1px solid #cfd8dc}.ngx-calendar__default-day{position:absolute;top:0;bottom:0;right:0;left:0;padding:.5rem}.ngx-calendar__default-day:nth-child(7n),.ngx-calendar__default-day:nth-child(7n-1){background-color:#feedd9}.ngx-calendar__default-day:nth-child(-n+7){border-top:none}.ngx-calendar__default-day.today{box-shadow:inset 0 0 2px 2px #f57c00}.ngx-calendar__day-number{text-align:right;color:#546e7a;font-size:.85rem}"]
                }] }
    ];
    /** @nocollapse */
    NgxSimpleCalendarComponent.ctorParameters = function () { return [
        { type: NgxSimpleCalendarService }
    ]; };
    NgxSimpleCalendarComponent.propDecorators = {
        options: [{ type: Input, args: ['options',] }],
        events: [{ type: Input, args: ['events',] }],
        dayHolder: [{ type: ViewChild, args: ['dayHolder', { static: false, read: ElementRef },] }],
        dayTemplate: [{ type: ContentChild, args: ['day', { static: false, read: TemplateRef },] }],
        topBarTemplate: [{ type: ContentChild, args: ['topBar', { static: false, read: TemplateRef },] }],
        weekDaysTemplate: [{ type: ContentChild, args: ['weekDays', { static: false, read: TemplateRef },] }]
    };
    return NgxSimpleCalendarComponent;
}());
export { NgxSimpleCalendarComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    NgxSimpleCalendarComponent.prototype.eventsInternal;
    /** @type {?} */
    NgxSimpleCalendarComponent.prototype.options;
    /** @type {?} */
    NgxSimpleCalendarComponent.prototype.dayHolder;
    /** @type {?} */
    NgxSimpleCalendarComponent.prototype.dayTemplate;
    /** @type {?} */
    NgxSimpleCalendarComponent.prototype.topBarTemplate;
    /** @type {?} */
    NgxSimpleCalendarComponent.prototype.weekDaysTemplate;
    /** @type {?} */
    NgxSimpleCalendarComponent.prototype.dayCorrectedHeight;
    /** @type {?} */
    NgxSimpleCalendarComponent.prototype.calendarData;
    /** @type {?} */
    NgxSimpleCalendarComponent.prototype.currentMonthYearText;
    /** @type {?} */
    NgxSimpleCalendarComponent.prototype.currentMonth;
    /** @type {?} */
    NgxSimpleCalendarComponent.prototype.currentYear;
    /** @type {?} */
    NgxSimpleCalendarComponent.prototype.months;
    /** @type {?} */
    NgxSimpleCalendarComponent.prototype.days;
    /** @type {?} */
    NgxSimpleCalendarComponent.prototype.settings;
    /**
     * @type {?}
     * @private
     */
    NgxSimpleCalendarComponent.prototype.ngxCalendarSrv;
}
//# sourceMappingURL=data:application/json;base64,