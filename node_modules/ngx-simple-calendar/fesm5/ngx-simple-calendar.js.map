{"version":3,"file":"ngx-simple-calendar.js","sources":["ng://ngx-simple-calendar/lib/data-models/data-calendar.ts","ng://ngx-simple-calendar/lib/ngx-simple-calendar.service.ts","ng://ngx-simple-calendar/lib/ngx-simple-calendar.component.ts","ng://ngx-simple-calendar/lib/ngx-simple-calendar.module.ts"],"sourcesContent":["// ENUMS\n\nexport enum Month {\n  January,\n  February,\n  March,\n  April,\n  May,\n  June,\n  July,\n  August,\n  September,\n  October,\n  November,\n  December\n}\n\n// DAYS\n\nexport enum Day {\n  Sunday,\n  Monday,\n  Tuesday,\n  Wednesday,\n  Thursday,\n  Friday,\n  Saturday\n}\n\n// INTERFACES\n// Day object inside calendar\nexport interface CalendarDay {\n  today: boolean;\n  readonly number: number;\n  readonly month: number;\n  readonly year: number;\n  readonly startDateTime: Date;\n  readonly endDateTime: Date;\n  readonly weekend: boolean;\n  readonly activeMonth: boolean;\n  events: CalendarEvent[];\n}\n\nexport interface TopBar {\n  year: number;\n  month: CalendarMonths;\n  setNextMonth: () => void;\n  setPreviousMonth: () => void;\n}\n\nexport interface CalendarEvent {\n  startDateTime: Date;\n  endDateTime?: Date;\n  data?: any;\n}\n\nexport interface DayI {\n  readonly id: number;\n  readonly translationKey: string;\n  readonly name: string;\n}\n\nexport interface CalendarMonths {\n  readonly id: Month;\n  readonly translationKey: string;\n  readonly name: string;\n}\n\n// BASE DATA\n\nexport const months: CalendarMonths[] = [{\n  id: Month.January,\n  translationKey: 'calendar.months.january',\n  name: 'January'\n}, {\n  id: Month.February,\n  translationKey: 'calendar.months.february',\n  name: 'February'\n}, {\n  id: Month.March,\n  translationKey: 'calendar.months.march',\n  name: 'March'\n}, {\n  id: Month.April,\n  translationKey: 'calendar.months.april',\n  name: 'April'\n}, {\n  id: Month.May,\n  translationKey: 'calendar.months.may',\n  name: 'May'\n}, {\n  id: Month.June,\n  translationKey: 'calendar.months.june',\n  name: 'June'\n}, {\n  id: Month.July,\n  translationKey: 'calendar.months.july',\n  name: 'July'\n}, {\n  id: Month.August,\n  translationKey: 'calendar.months.august',\n  name: 'August'\n}, {\n  id: Month.September,\n  translationKey: 'calendar.months.september',\n  name: 'September'\n}, {\n  id: Month.October,\n  translationKey: 'calendar.months.october',\n  name: 'October'\n}, {\n  id: Month.November,\n  translationKey: 'calendar.months.november',\n  name: 'November'\n}, {\n  id: Month.December,\n  translationKey: 'calendar.months.december',\n  name: 'December'\n}];\n\nexport const days: DayI[] = [{\n  id: Day.Monday,\n  translationKey: 'calendar.days.monday',\n  name: 'Monday'\n}, {\n  id: Day.Tuesday,\n  translationKey: 'calendar.days.tuesday',\n  name: 'Tuesday'\n}, {\n  id: Day.Wednesday,\n  translationKey: 'calendar.days.wednesday',\n  name: 'Wednesday'\n}, {\n  id: Day.Thursday,\n  translationKey: 'calendar.days.thursday',\n  name: 'Thursday'\n}, {\n  id: Day.Friday,\n  translationKey: 'calendar.days.friday',\n  name: 'Friday'\n}, {\n  id: Day.Saturday,\n  translationKey: 'calendar.days.saturday',\n  name: 'Saturday'\n}, {\n  id: Day.Sunday,\n  translationKey: 'calendar.days.sunday',\n  name: 'Sunday'\n}];\n","import { Injectable } from '@angular/core';\nimport {CalendarDay, CalendarEvent, months} from './data-models/data-calendar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxSimpleCalendarService {\n\n  constructor() {\n  }\n\n  getDaysInMonth = (month: number, year: number) => new Date(year, month + 1, 0).getDate();\n\n  getFirstDayInMonth = (month: number, year: number) => new Date(year, month, 1).getDay();\n\n  getLastDayInMonth = (month: number, year: number) => new Date(year, month, this.getDaysInMonth(month, year)).getDay();\n\n  setupCalendar(month: number, year: number, events: CalendarEvent[]): CalendarDay[] {\n    const firstDayInMonth = this.getFirstDayInMonth(month, year);\n    const lastDayInMonth = this.getLastDayInMonth(month, year);\n\n    const daysFromLastMonth = this.getDaysFromLastMonth(month, year, firstDayInMonth);\n    const daysFromCurrentMonth = this.getDaysInCurrentMonth(month, year);\n    const daysFromNextMonth = this.getDaysFromNextMonth(month, year, lastDayInMonth);\n\n    const calendarData = [...daysFromLastMonth, ...daysFromCurrentMonth, ...daysFromNextMonth];\n\n    this.markCurrentDate(calendarData);\n\n    if (events) {\n      this.addEvents(calendarData, events);\n    }\n\n    return calendarData;\n  }\n\n  getMonthYearText = (monthNumber: number, year: number) => `${months.find((item) => item.id === monthNumber).name} ${year}`;\n\n  private getDaysFromLastMonth(month: number, year: number, firstDayInMonth: number): CalendarDay[] {\n    let lastMonth, activeYear;\n    const lastMonthDays = [];\n    if ((month - 1) === -1) {\n      lastMonth = 11;\n      activeYear = year - 1;\n    } else {\n      lastMonth = month - 1;\n      activeYear = year;\n    }\n\n    const daysLastMonth = this.getDaysInMonth(lastMonth, activeYear);\n    const lastFromMonth = (firstDayInMonth === 0) ? 6 : firstDayInMonth - 1;\n\n    for (let i = (daysLastMonth - lastFromMonth) + 1; i <= daysLastMonth; i++) {\n      lastMonthDays.push(this.generatedayObject(activeYear, lastMonth, i, false));\n    }\n\n    return lastMonthDays;\n  }\n\n  private getDaysInCurrentMonth(month, year): CalendarDay[] {\n    const daysInMonth = this.getDaysInMonth(month, year);\n    const currentMonthDays = [];\n\n    for (let i = 1; i <= daysInMonth; i++) {\n      currentMonthDays.push(this.generatedayObject(year, month, i));\n    }\n\n    return currentMonthDays;\n  }\n\n  private getDaysFromNextMonth(month: number, year: number, lastDayInMonth: number): CalendarDay[] {\n    let nextMonth, activeYear;\n\n    const lastMonthDays = [];\n    if ((month + 1) === 12) {\n      nextMonth = 0;\n      activeYear = year + 1;\n    } else {\n      nextMonth = month + 1;\n      activeYear = year;\n    }\n\n    const lastFromMonth = (lastDayInMonth === 0) ? 0 : 7 - lastDayInMonth;\n\n    for (let i = 1; i <= lastFromMonth; i++) {\n      lastMonthDays.push(this.generatedayObject(activeYear, nextMonth, i, false));\n    }\n\n    return lastMonthDays;\n  }\n\n  private markCurrentDate(calendarData: CalendarDay[]) {\n    const now = new Date();\n    const todaysDate = now.getDate();\n    const todaysMonth = now.getMonth();\n    const todaysYear = now.getFullYear();\n\n    calendarData.forEach((day) => {\n      if (day.number === todaysDate && day.month === todaysMonth && day.year === todaysYear) {\n        day.today = true;\n      }\n    });\n  }\n\n  private isWeekend(date: Date) {\n    const numberDay = date.getDay();\n    return numberDay === 0 || numberDay === 6;\n  }\n\n  private getDateTimeLastOfDay(dateTime: Date) {\n    const result = new Date(dateTime.getTime());\n    result.setDate(result.getDate() + 1);\n    result.setMilliseconds(result.getMilliseconds() - 1);\n    return result;\n  }\n\n  generatedayObject(year: number, month: number, day: number, activeMonth: boolean = true) {\n    const startDateTime = new Date(year, month, day);\n    const endDateTime = this.getDateTimeLastOfDay(startDateTime);\n    return {\n      number: day,\n      startDateTime,\n      endDateTime,\n      month: startDateTime.getMonth(),\n      year: startDateTime.getFullYear(),\n      weekend: this.isWeekend(startDateTime),\n      today: false,\n      activeMonth,\n      events: []\n    };\n  }\n\n  private addEvents(calendarData: CalendarDay[], events: CalendarEvent[]) {\n    events.forEach((event: CalendarEvent) => {\n      if (!event.endDateTime) {\n        this.handleFullDayEvent(calendarData, event);\n      } else {\n        this.handleEventInterval(calendarData, event);\n      }\n    });\n  }\n\n  private handleFullDayEvent(calendarData: CalendarDay[], event: CalendarEvent) {\n    try {\n      const dayWithEvent = calendarData.find((day) => {\n        return day.startDateTime.getTime() <= event.startDateTime.getTime() && day.endDateTime.getTime() >= event.startDateTime.getTime();\n      });\n      dayWithEvent.events.push(event);\n    } catch (e) {\n      console.log('startDateTime on event is not set');\n    }\n  }\n\n  private handleEventInterval(calendarData: CalendarDay[], event: CalendarEvent) {\n    try {\n      const fromDaysInCalendar = calendarData.filter((day) => day.endDateTime.getTime() >= event.startDateTime.getTime());\n      const intervalDaysInCalendar = fromDaysInCalendar.filter((day) => {\n        const yesterDayReferentDay = new Date(day.endDateTime.getTime());\n        yesterDayReferentDay.setDate(yesterDayReferentDay.getDate() - 1);\n        return yesterDayReferentDay.getTime() <= event.endDateTime.getTime();\n      });\n      intervalDaysInCalendar.forEach((day) => {\n        day.events.push(event);\n      });\n    } catch (e) {\n      console.log('Error on handling event interval');\n    }\n  }\n}\n","import {AfterViewInit, Component, ContentChild, ElementRef, Input, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {NgxSimpleCalendarService} from './ngx-simple-calendar.service';\nimport {months, days, CalendarDay, CalendarEvent, TopBar, CalendarMonths, DayI} from './data-models/data-calendar';\n\n\n@Component({\n  selector: 'ngx-simple-calendar',\n  templateUrl: './ngx-simple-calendar.component.html',\n  styleUrls: ['./ngx-simple-calendar.component.scss']\n})\nexport class NgxSimpleCalendarComponent implements OnInit, AfterViewInit {\n\n  private eventsInternal: CalendarEvent[];\n\n  @Input('options') options = {};\n\n  @Input('events') set events(value: CalendarEvent[]) {\n    this.eventsInternal = value;\n    this.initializeCalendar();\n  }\n\n  get events(): CalendarEvent[] {\n    return this.eventsInternal;\n  }\n\n  @ViewChild('dayHolder', {static: false, read: ElementRef}) dayHolder;\n\n  @ContentChild('day', {static: false, read: TemplateRef}) dayTemplate;\n  @ContentChild('topBar', {static: false, read: TemplateRef}) topBarTemplate;\n  @ContentChild('weekDays', {static: false, read: TemplateRef}) weekDaysTemplate;\n\n  get activeMonth(): TopBar {\n    const currentMonth = months.find((month) => month.id === this.currentMonth);\n    return {\n      year: this.currentYear,\n      month: currentMonth,\n      setNextMonth: this.setNextMonth,\n      setPreviousMonth: this.setPreviousMonth\n    };\n  }\n\n  constructor(private ngxCalendarSrv: NgxSimpleCalendarService) {\n  }\n\n  dayCorrectedHeight = '';\n  calendarData: CalendarDay[];\n  currentMonthYearText: string;\n  currentMonth: number;\n  currentYear: number;\n\n  months: CalendarMonths[] = months;\n  days: DayI[] = days;\n\n  settings = {\n    outline: true,\n    evenDayDimensions: false\n  };\n\n  ngOnInit() {\n    this.settings = {...this.settings, ...this.options};\n    this.initializeCalendar();\n  }\n\n  ngAfterViewInit(): void {\n    setTimeout(() => this.dayCorrectedHeight = `${this.dayHolder.nativeElement.clientWidth}px`, 0);\n  }\n\n  private initializeCalendar() {\n    this.setupActiveDate();\n    this.setupCalendarData();\n  }\n\n  private setupActiveDate() {\n    if (!this.currentMonth) {\n      const now = new Date();\n      this.currentMonth = now.getMonth();\n      this.currentYear = now.getFullYear();\n      this.currentMonthYearText = this.ngxCalendarSrv.getMonthYearText(this.currentMonth, this.currentYear);\n    }\n  }\n\n  private setupCalendarData() {\n    this.calendarData = this.ngxCalendarSrv.setupCalendar(this.currentMonth, this.currentYear, this.events);\n  }\n\n  setPreviousMonth() {\n    if ((this.currentMonth - 1) === -1) {\n      this.currentMonth = 11;\n      this.currentYear = this.currentYear - 1;\n    } else {\n      this.currentMonth = this.currentMonth - 1;\n    }\n    this.calendarData = this.ngxCalendarSrv.setupCalendar(this.currentMonth, this.currentYear, this.events);\n    this.currentMonthYearText = this.ngxCalendarSrv.getMonthYearText(this.currentMonth, this.currentYear);\n  }\n\n  setNextMonth() {\n    if ((this.currentMonth + 1) === 12) {\n      this.currentMonth = 0;\n      this.currentYear = this.currentYear + 1;\n    } else {\n      this.currentMonth = this.currentMonth + 1;\n    }\n\n    this.calendarData = this.ngxCalendarSrv.setupCalendar(this.currentMonth, this.currentYear, this.events);\n    this.currentMonthYearText = this.ngxCalendarSrv.getMonthYearText(this.currentMonth, this.currentYear);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxSimpleCalendarComponent } from './ngx-simple-calendar.component';\nimport {CommonModule} from '@angular/common';\nimport {NgxSimpleCalendarService} from './ngx-simple-calendar.service';\n\n@NgModule({\n  declarations: [NgxSimpleCalendarComponent],\n  providers: [NgxSimpleCalendarService],\n  imports: [CommonModule],\n  exports: [NgxSimpleCalendarComponent]\n})\nexport class NgxSimpleCalendarModule { }\n"],"names":[],"mappings":";;;;;;;;;;;IAGE,UAAO;IACP,WAAQ;IACR,QAAK;IACL,QAAK;IACL,MAAG;IACH,OAAI;IACJ,OAAI;IACJ,SAAM;IACN,YAAS;IACT,UAAO;IACP,YAAQ;IACR,YAAQ;;;;;;;;;;;;;;;;IAMR,SAAM;IACN,SAAM;IACN,UAAO;IACP,YAAS;IACT,WAAQ;IACR,SAAM;IACN,WAAQ;;;;;;;;;;;;AAKV,0BAUC;;;IATC,4BAAe;;IACf,6BAAwB;;IACxB,4BAAuB;;IACvB,2BAAsB;;IACtB,oCAA6B;;IAC7B,kCAA2B;;IAC3B,8BAA0B;;IAC1B,kCAA8B;;IAC9B,6BAAwB;;;;;AAG1B,qBAKC;;;IAJC,sBAAa;;IACb,uBAAsB;;IACtB,8BAAyB;;IACzB,kCAA6B;;;;;AAG/B,4BAIC;;;IAHC,sCAAoB;;IACpB,oCAAmB;;IACnB,6BAAW;;;;;AAGb,mBAIC;;;IAHC,kBAAoB;;IACpB,8BAAgC;;IAChC,oBAAsB;;;;;AAGxB,6BAIC;;;IAHC,4BAAmB;;IACnB,wCAAgC;;IAChC,8BAAsB;;;SAMlB,KAAK,CAAC,OAAO,OAIb,KAAK,CAAC,QAAQ,OAId,KAAK,CAAC,KAAK,OAIX,KAAK,CAAC,KAAK,OAIX,KAAK,CAAC,GAAG,OAIT,KAAK,CAAC,IAAI,OAIV,KAAK,CAAC,IAAI,OAIV,KAAK,CAAC,MAAM,OAIZ,KAAK,CAAC,SAAS,OAIf,KAAK,CAAC,OAAO,QAIb,KAAK,CAAC,QAAQ,QAId,KAAK,CAAC,QAAQ;;AA7CpB,IAAa,MAAM,GAAqB,CAAC;QACvC,EAAE,IAAe;QACjB,cAAc,EAAE,yBAAyB;QACzC,IAAI,EAAE,SAAS;KAChB,EAAE;QACD,EAAE,IAAgB;QAClB,cAAc,EAAE,0BAA0B;QAC1C,IAAI,EAAE,UAAU;KACjB,EAAE;QACD,EAAE,IAAa;QACf,cAAc,EAAE,uBAAuB;QACvC,IAAI,EAAE,OAAO;KACd,EAAE;QACD,EAAE,IAAa;QACf,cAAc,EAAE,uBAAuB;QACvC,IAAI,EAAE,OAAO;KACd,EAAE;QACD,EAAE,IAAW;QACb,cAAc,EAAE,qBAAqB;QACrC,IAAI,EAAE,KAAK;KACZ,EAAE;QACD,EAAE,IAAY;QACd,cAAc,EAAE,sBAAsB;QACtC,IAAI,EAAE,MAAM;KACb,EAAE;QACD,EAAE,IAAY;QACd,cAAc,EAAE,sBAAsB;QACtC,IAAI,EAAE,MAAM;KACb,EAAE;QACD,EAAE,IAAc;QAChB,cAAc,EAAE,wBAAwB;QACxC,IAAI,EAAE,QAAQ;KACf,EAAE;QACD,EAAE,IAAiB;QACnB,cAAc,EAAE,2BAA2B;QAC3C,IAAI,EAAE,WAAW;KAClB,EAAE;QACD,EAAE,IAAe;QACjB,cAAc,EAAE,yBAAyB;QACzC,IAAI,EAAE,SAAS;KAChB,EAAE;QACD,EAAE,KAAgB;QAClB,cAAc,EAAE,0BAA0B;QAC1C,IAAI,EAAE,UAAU;KACjB,EAAE;QACD,EAAE,KAAgB;QAClB,cAAc,EAAE,0BAA0B;QAC1C,IAAI,EAAE,UAAU;KACjB,CAAC;UAGI,GAAG,CAAC,MAAM,QAIV,GAAG,CAAC,OAAO,QAIX,GAAG,CAAC,SAAS,QAIb,GAAG,CAAC,QAAQ,QAIZ,GAAG,CAAC,MAAM,QAIV,GAAG,CAAC,QAAQ,QAIZ,GAAG,CAAC,MAAM;;AAzBhB,IAAa,IAAI,GAAW,CAAC;QAC3B,EAAE,KAAY;QACd,cAAc,EAAE,sBAAsB;QACtC,IAAI,EAAE,QAAQ;KACf,EAAE;QACD,EAAE,KAAa;QACf,cAAc,EAAE,uBAAuB;QACvC,IAAI,EAAE,SAAS;KAChB,EAAE;QACD,EAAE,KAAe;QACjB,cAAc,EAAE,yBAAyB;QACzC,IAAI,EAAE,WAAW;KAClB,EAAE;QACD,EAAE,KAAc;QAChB,cAAc,EAAE,wBAAwB;QACxC,IAAI,EAAE,UAAU;KACjB,EAAE;QACD,EAAE,KAAY;QACd,cAAc,EAAE,sBAAsB;QACtC,IAAI,EAAE,QAAQ;KACf,EAAE;QACD,EAAE,KAAc;QAChB,cAAc,EAAE,wBAAwB;QACxC,IAAI,EAAE,UAAU;KACjB,EAAE;QACD,EAAE,KAAY;QACd,cAAc,EAAE,sBAAsB;QACtC,IAAI,EAAE,QAAQ;KACf,CAAC;;;;;;;IC5IA;QAAA,iBACC;QAED,mBAAc;;;;;QAAG,UAAC,KAAa,EAAE,IAAY,IAAK,OAAA,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,EAAE,GAAA,EAAC;QAEzF,uBAAkB;;;;;QAAG,UAAC,KAAa,EAAE,IAAY,IAAK,OAAA,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,MAAM,EAAE,GAAA,EAAC;QAExF,sBAAiB;;;;;QAAG,UAAC,KAAa,EAAE,IAAY,IAAK,OAAA,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,KAAI,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM,EAAE,GAAA,EAAC;QAqBtH,qBAAgB;;;;;QAAG,UAAC,WAAmB,EAAE,IAAY,IAAK,OAAG,MAAM,CAAC,IAAI;;;;QAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,EAAE,KAAK,WAAW,GAAA,EAAC,CAAC,IAAI,SAAI,IAAM,GAAA,EAAC;KA3B1H;;;;;;;IAQD,gDAAa;;;;;;IAAb,UAAc,KAAa,EAAE,IAAY,EAAE,MAAuB;;YAC1D,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAAC;;YACtD,cAAc,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,EAAE,IAAI,CAAC;;YAEpD,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,IAAI,EAAE,eAAe,CAAC;;YAC3E,oBAAoB,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,EAAE,IAAI,CAAC;;YAC9D,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,EAAE,IAAI,EAAE,cAAc,CAAC;;YAE1E,YAAY,YAAO,iBAAiB,EAAK,oBAAoB,EAAK,iBAAiB,CAAC;QAE1F,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;QAEnC,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;SACtC;QAED,OAAO,YAAY,CAAC;KACrB;;;;;;;;IAIO,uDAAoB;;;;;;;IAA5B,UAA6B,KAAa,EAAE,IAAY,EAAE,eAAuB;;YAC3E,SAAS;;YAAE,UAAU;;YACnB,aAAa,GAAG,EAAE;QACxB,IAAI,CAAC,KAAK,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE;YACtB,SAAS,GAAG,EAAE,CAAC;YACf,UAAU,GAAG,IAAI,GAAG,CAAC,CAAC;SACvB;aAAM;YACL,SAAS,GAAG,KAAK,GAAG,CAAC,CAAC;YACtB,UAAU,GAAG,IAAI,CAAC;SACnB;;YAEK,aAAa,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,UAAU,CAAC;;YAC1D,aAAa,GAAG,CAAC,eAAe,KAAK,CAAC,IAAI,CAAC,GAAG,eAAe,GAAG,CAAC;QAEvE,KAAK,IAAI,CAAC,GAAG,CAAC,aAAa,GAAG,aAAa,IAAI,CAAC,EAAE,CAAC,IAAI,aAAa,EAAE,CAAC,EAAE,EAAE;YACzE,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,SAAS,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;SAC7E;QAED,OAAO,aAAa,CAAC;KACtB;;;;;;;IAEO,wDAAqB;;;;;;IAA7B,UAA8B,KAAK,EAAE,IAAI;;YACjC,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,EAAE,IAAI,CAAC;;YAC9C,gBAAgB,GAAG,EAAE;QAE3B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,WAAW,EAAE,CAAC,EAAE,EAAE;YACrC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC;SAC/D;QAED,OAAO,gBAAgB,CAAC;KACzB;;;;;;;;IAEO,uDAAoB;;;;;;;IAA5B,UAA6B,KAAa,EAAE,IAAY,EAAE,cAAsB;;YAC1E,SAAS;;YAAE,UAAU;;YAEnB,aAAa,GAAG,EAAE;QACxB,IAAI,CAAC,KAAK,GAAG,CAAC,MAAM,EAAE,EAAE;YACtB,SAAS,GAAG,CAAC,CAAC;YACd,UAAU,GAAG,IAAI,GAAG,CAAC,CAAC;SACvB;aAAM;YACL,SAAS,GAAG,KAAK,GAAG,CAAC,CAAC;YACtB,UAAU,GAAG,IAAI,CAAC;SACnB;;YAEK,aAAa,GAAG,CAAC,cAAc,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,cAAc;QAErE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,aAAa,EAAE,CAAC,EAAE,EAAE;YACvC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,SAAS,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;SAC7E;QAED,OAAO,aAAa,CAAC;KACtB;;;;;;IAEO,kDAAe;;;;;IAAvB,UAAwB,YAA2B;;YAC3C,GAAG,GAAG,IAAI,IAAI,EAAE;;YAChB,UAAU,GAAG,GAAG,CAAC,OAAO,EAAE;;YAC1B,WAAW,GAAG,GAAG,CAAC,QAAQ,EAAE;;YAC5B,UAAU,GAAG,GAAG,CAAC,WAAW,EAAE;QAEpC,YAAY,CAAC,OAAO;;;;QAAC,UAAC,GAAG;YACvB,IAAI,GAAG,CAAC,MAAM,KAAK,UAAU,IAAI,GAAG,CAAC,KAAK,KAAK,WAAW,IAAI,GAAG,CAAC,IAAI,KAAK,UAAU,EAAE;gBACrF,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC;aAClB;SACF,EAAC,CAAC;KACJ;;;;;;IAEO,4CAAS;;;;;IAAjB,UAAkB,IAAU;;YACpB,SAAS,GAAG,IAAI,CAAC,MAAM,EAAE;QAC/B,OAAO,SAAS,KAAK,CAAC,IAAI,SAAS,KAAK,CAAC,CAAC;KAC3C;;;;;;IAEO,uDAAoB;;;;;IAA5B,UAA6B,QAAc;;YACnC,MAAM,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;QAC3C,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;QACrC,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,eAAe,EAAE,GAAG,CAAC,CAAC,CAAC;QACrD,OAAO,MAAM,CAAC;KACf;;;;;;;;IAED,oDAAiB;;;;;;;IAAjB,UAAkB,IAAY,EAAE,KAAa,EAAE,GAAW,EAAE,WAA2B;QAA3B,4BAAA,EAAA,kBAA2B;;YAC/E,aAAa,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC;;YAC1C,WAAW,GAAG,IAAI,CAAC,oBAAoB,CAAC,aAAa,CAAC;QAC5D,OAAO;YACL,MAAM,EAAE,GAAG;YACX,aAAa,eAAA;YACb,WAAW,aAAA;YACX,KAAK,EAAE,aAAa,CAAC,QAAQ,EAAE;YAC/B,IAAI,EAAE,aAAa,CAAC,WAAW,EAAE;YACjC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;YACtC,KAAK,EAAE,KAAK;YACZ,WAAW,aAAA;YACX,MAAM,EAAE,EAAE;SACX,CAAC;KACH;;;;;;;IAEO,4CAAS;;;;;;IAAjB,UAAkB,YAA2B,EAAE,MAAuB;QAAtE,iBAQC;QAPC,MAAM,CAAC,OAAO;;;;QAAC,UAAC,KAAoB;YAClC,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE;gBACtB,KAAI,CAAC,kBAAkB,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;aAC9C;iBAAM;gBACL,KAAI,CAAC,mBAAmB,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;aAC/C;SACF,EAAC,CAAC;KACJ;;;;;;;IAEO,qDAAkB;;;;;;IAA1B,UAA2B,YAA2B,EAAE,KAAoB;QAC1E,IAAI;;gBACI,YAAY,GAAG,YAAY,CAAC,IAAI;;;;YAAC,UAAC,GAAG;gBACzC,OAAO,GAAG,CAAC,aAAa,CAAC,OAAO,EAAE,IAAI,KAAK,CAAC,aAAa,CAAC,OAAO,EAAE,IAAI,GAAG,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,KAAK,CAAC,aAAa,CAAC,OAAO,EAAE,CAAC;aACnI,EAAC;YACF,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACjC;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,mCAAmC,CAAC,CAAC;SAClD;KACF;;;;;;;IAEO,sDAAmB;;;;;;IAA3B,UAA4B,YAA2B,EAAE,KAAoB;QAC3E,IAAI;;gBACI,kBAAkB,GAAG,YAAY,CAAC,MAAM;;;;YAAC,UAAC,GAAG,IAAK,OAAA,GAAG,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,KAAK,CAAC,aAAa,CAAC,OAAO,EAAE,GAAA,EAAC;;gBAC7G,sBAAsB,GAAG,kBAAkB,CAAC,MAAM;;;;YAAC,UAAC,GAAG;;oBACrD,oBAAoB,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;gBAChE,oBAAoB,CAAC,OAAO,CAAC,oBAAoB,CAAC,OAAO,EAAE,GAAG,CAAC,CAAC,CAAC;gBACjE,OAAO,oBAAoB,CAAC,OAAO,EAAE,IAAI,KAAK,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC;aACtE,EAAC;YACF,sBAAsB,CAAC,OAAO;;;;YAAC,UAAC,GAAG;gBACjC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACxB,EAAC,CAAC;SACJ;QAAC,OAAO,CAAC,EAAE;YACV,OAAO,CAAC,GAAG,CAAC,kCAAkC,CAAC,CAAC;SACjD;KACF;;gBApKF,UAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;;mCALD;CAGA,IAqKC;;;IA7JC,kDAAyF;;IAEzF,sDAAwF;;IAExF,qDAAsH;;IAqBtH,oDAA2H;;;;;;;;ICK3H,oCAAoB,cAAwC;QAAxC,mBAAc,GAAd,cAAc,CAA0B;QA3B1C,YAAO,GAAG,EAAE,CAAC;QA8B/B,uBAAkB,GAAG,EAAE,CAAC;QAMxB,WAAM,GAAqB,MAAM,CAAC;QAClC,SAAI,GAAW,IAAI,CAAC;QAEpB,aAAQ,GAAG;YACT,OAAO,EAAE,IAAI;YACb,iBAAiB,EAAE,KAAK;SACzB,CAAC;KAdD;IA1BD,sBAAqB,8CAAM;;;;QAK3B;YACE,OAAO,IAAI,CAAC,cAAc,CAAC;SAC5B;;;;;QAPD,UAA4B,KAAsB;YAChD,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;YAC5B,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;;;OAAA;IAYD,sBAAI,mDAAW;;;;QAAf;YAAA,iBAQC;;gBAPO,YAAY,GAAG,MAAM,CAAC,IAAI;;;;YAAC,UAAC,KAAK,IAAK,OAAA,KAAK,CAAC,EAAE,KAAK,KAAI,CAAC,YAAY,GAAA,EAAC;YAC3E,OAAO;gBACL,IAAI,EAAE,IAAI,CAAC,WAAW;gBACtB,KAAK,EAAE,YAAY;gBACnB,YAAY,EAAE,IAAI,CAAC,YAAY;gBAC/B,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;aACxC,CAAC;SACH;;;OAAA;;;;IAmBD,6CAAQ;;;IAAR;QACE,IAAI,CAAC,QAAQ,gBAAO,IAAI,CAAC,QAAQ,EAAK,IAAI,CAAC,OAAO,CAAC,CAAC;QACpD,IAAI,CAAC,kBAAkB,EAAE,CAAC;KAC3B;;;;IAED,oDAAe;;;IAAf;QAAA,iBAEC;QADC,UAAU;;;QAAC,cAAM,OAAA,KAAI,CAAC,kBAAkB,GAAM,KAAI,CAAC,SAAS,CAAC,aAAa,CAAC,WAAW,OAAI,GAAA,GAAE,CAAC,CAAC,CAAC;KAChG;;;;;IAEO,uDAAkB;;;;IAA1B;QACE,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAC1B;;;;;IAEO,oDAAe;;;;IAAvB;QACE,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;;gBAChB,GAAG,GAAG,IAAI,IAAI,EAAE;YACtB,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;YACnC,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC,WAAW,EAAE,CAAC;YACrC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;SACvG;KACF;;;;;IAEO,sDAAiB;;;;IAAzB;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KACzG;;;;IAED,qDAAgB;;;IAAhB;QACE,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,MAAM,CAAC,CAAC,EAAE;YAClC,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACvB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;SACzC;aAAM;YACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;SAC3C;QACD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACxG,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;KACvG;;;;IAED,iDAAY;;;IAAZ;QACE,IAAI,CAAC,IAAI,CAAC,YAAY,GAAG,CAAC,MAAM,EAAE,EAAE;YAClC,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;YACtB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;SACzC;aAAM;YACL,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;SAC3C;QAED,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QACxG,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;KACvG;;gBArGF,SAAS,SAAC;oBACT,QAAQ,EAAE,qBAAqB;oBAC/B,6qEAAmD;;iBAEpD;;;;gBARO,wBAAwB;;;0BAa7B,KAAK,SAAC,SAAS;yBAEf,KAAK,SAAC,QAAQ;4BASd,SAAS,SAAC,WAAW,EAAE,EAAC,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,UAAU,EAAC;8BAExD,YAAY,SAAC,KAAK,EAAE,EAAC,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAC;iCACtD,YAAY,SAAC,QAAQ,EAAE,EAAC,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAC;mCACzD,YAAY,SAAC,UAAU,EAAE,EAAC,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,WAAW,EAAC;;IA8E9D,iCAAC;CAtGD,IAsGC;;;;;;IA/FC,oDAAwC;;IAExC,6CAA+B;;IAW/B,+CAAqE;;IAErE,iDAAqE;;IACrE,oDAA2E;;IAC3E,sDAA+E;;IAe/E,wDAAwB;;IACxB,kDAA4B;;IAC5B,0DAA6B;;IAC7B,kDAAqB;;IACrB,iDAAoB;;IAEpB,4CAAkC;;IAClC,0CAAoB;;IAEpB,8CAGE;;;;;IAfU,oDAAgD;;;;;;;ACzC9D;IAKA;KAMwC;;gBANvC,QAAQ,SAAC;oBACR,YAAY,EAAE,CAAC,0BAA0B,CAAC;oBAC1C,SAAS,EAAE,CAAC,wBAAwB,CAAC;oBACrC,OAAO,EAAE,CAAC,YAAY,CAAC;oBACvB,OAAO,EAAE,CAAC,0BAA0B,CAAC;iBACtC;;IACsC,8BAAC;CANxC;;;;;;;;;;;;;;"}