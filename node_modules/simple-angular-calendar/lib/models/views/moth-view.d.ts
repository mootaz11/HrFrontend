import { DayOfWeek } from '../day-of-week';
import { DayInfo } from '../day-info';
/**
 * Creates a view of a month.
 */
export declare class MonthView {
    private date;
    private readonly WEEKS_PER_MONTH;
    private readonly DAYS_PER_WEEK;
    /**
     * Creates a new instance of MonthView.
     * @param date Date of the month.
     */
    constructor(date: Date);
    /**
     * Creates the grid corresponding to the month specified
     * by the date.
     * @param completeHoles Indicates if the beginning and end
     * of the grid should be completed with the days of the
     * adjacent months.
     * @param weekStart Day of week to be considered the beginning
     * of the week.
     */
    createView(completeHoles?: boolean, weekStart?: DayOfWeek): Array<Array<DayInfo>>;
    /**
     * Creates the grid corresponding to the month specified
     * by the date.
     * @param date Date to use.
     * @param weekStart Day of week which will be considered
     * the beginning of the week.
     */
    private createGrid(date, weekStart?);
    /**
     * Initializes the grid that contains
     * the info about the "shape" of the
     * month.
     */
    private initGrid();
}
